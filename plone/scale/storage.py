"""
Image storage
=============

Storage and retrieval of images os abstracted, allowing different
implementations to be used.

Scales can be retrieved using either their scaling parameters or via an
identification code generated by the storage.
"""

from zope.interface import Attribute
from zope.interface import Interface

class IImageScale(Interface):
    """A scaled image. This is a very simple wrapper around an image scale
    which gives access to its metadata.

    The `id` attribute is usually only guaranteed to be unique within the
    context of a specific original image. For certain storage implementations
    it may be globally unique as well.
    """

    id = Attribute("An identifier uniquely identifying this scale")
    dimensions = Attribute("A (width, height) tuple with the image dimensions.")
    url = Attribute("absolute URL for this image.")
    mimetype = Attribute("The MIME-type of the image.")
    size = Attribute("The size of the image data in bytes.")



class IImageScaleStorage(Interface):
    """This is an adapter for an image which can store, retrieve and generate
    image scales. It provides a dictionary interface to existing image scales
    using the scale id as key. To find or create a scale based on its scaling
    parameters use the `:func:getScale` method.
    """

    def __init__(image):
        """Adapter constructor."""


    def getScale(width=None, height=None, direction=None, create=True):
        """Find a scale based on its parameters. The parameters can be anything
        supported by `:func:scaleImage`. If an existing scale is found it is
        returned in an `:obj:IImageScale` wrapper. If the scale does not exists
        it will be created, unless `create` is `False` in which case `None`
        will be returned instead.
        """

    def __getitem__(self, key):
        """Find a scale based on its id."""

